// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// npx prisma studio
// npx prisma migrate dev --name init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "postgresql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_URL")
  referentialIntegrity = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                 String        @id @default(cuid())
  name               String?
  email              String?       @unique
  emailVerified      DateTime?
  image              String?
  readingGoal        Int?
  readingGoalUpdated DateTime?     @default(now())
  accounts           Account[]
  sessions           Session[]
  Interaction        Interaction[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Book {
  id            String        @id @default(cuid())
  ISBN          String        @unique
  OLkey         String?
  title         String?
  author        String?
  cover         Int?
  pages         Int?
  publishedYear Int?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  Interaction   Interaction[]
}

model Interaction {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    Status   @default(COLLECTION)
  property  Property @default(NIL)
  User      User?    @relation(fields: [userId], references: [id])
  userId    String
  book      Book?    @relation(fields: [bookId], references: [id])
  bookId    String?
}

enum Status {
  COLLECTION
  READING
  TBR
  READ
  DNF
}

enum Property {
  NIL
  OWNED
  WANT
  SELLING
}
